/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #define default 0
 #define lower 1
 #define upper 2
 #define mod 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

//Uncomment this block if using RGB
&led_strip {
	chain-length = <6>;
	chain-length = <25>; // Uncomment if using both per-key and underglow LEDs
	// chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_ae {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp SQT>;
        };
		compatible = "zmk,combos";
        combo_oe {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp SEMI>;
        };
		compatible = "zmk,combos";
        combo_ue {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp LBKT>;
        };
		compatible = "zmk,combos";
        combo_ss {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp MINUS>;
        };
		compatible = "zmk,combos";
        combo_at {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp RALT(Q) + kp Q>;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";

		default {
			// ---------------------------------------------------------------------------------------------------------------------------------
			// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                        |  Z   |  U    |  I    |  O   |   P   |  LBKT |
			// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                        |  H   |  J    |  K    |  L   |   +   | ENTER |
			// | SHIFT |  Z  |  X  |  C   |  V   |  B   | Upper | ROT     |  | ROT     |   UP    |  N   |  M    |  ,    |  .   |   -   | Shift |
			//                     | Alt  | upper| lower|  LGUI |   L ALT |  |   LEFT  |  DOWN   | RIGHT  | SPACE  | R-CTRL |
			bindings = <
			&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
			&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp RBKT &kp RET
			&kp LSHFT &kp Z &kp X &kp C &kp V &kp B     &mo upper  &kp Y          &kp LSHFT &kp UP &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
							&mo mod &kp LCTRL	&kp LALT  &kp LGUI  &kp  Z    &kp LEFT  &kp DOWN  &kp RIGHT &kp SPACE &mo lower
			>;				
			sensor-bindings = <&inc_dec_kp LS(LA(C_VOL_UP)) LS(LA(C_VOL_DN))>;
		};

		lower {
			// ---------------------------------------------------------------------------------------------------------------------------------
			// |  !  |  "  |  §  |  $   |  %   |  &   |                                             |  <   |  (   |  )   |  =   |     |  Ü  |
			// |  °  |  ^  |  #  |  '   |   ?  |  ß   |                                                    |  >   |  [   |  ]   |      |  Ö  |  Ä  |
			// |  |    |    |     |     |     |   |      |         |  |                  |  | /    |  {   |  }   |     |    |    |
			//                     |   |   |   |   |      |  |      |  | RALT(KC_MINS)  |         |         |
			bindings = <
			&kp LS(N1)	  &kp LS(N2) &kp LS(N3)	&kp LS(N4)	&kp LS(N5)	&kp LS(N6)                   									&kp 0x35        &kp LS(N8)  &kp LS(N9) &kp LS(N0)   &trans    &kp LBKT
			&kp LS(GRAVE) &kp GRAVE   &kp NUHS   &kp LS(NUHS) &kp  MINUS     &kp  LS(MINUS)                                             &kp LS(0x35)  	&kp RA(N5)  &kp RA(N6) &trans   	&kp SEMI  &kp SQT
			&trans 		&trans  	&trans  	&trans 		&trans 		&trans 		&trans 		&trans          &trans 		&trans   	&kp LS(N7)     	&kp RA(N8)  &kp RA(N9) &trans   	&trans    &trans
												&trans 		&trans 		&trans 		&trans 		&trans      	&trans  	&trans  	&kp RA(MINUS)		&trans 		&trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	
 		upper {
			// ---------------------------------------------------------------------------------------------------------------------------------
			// |  ON  | OFF |BT_CLR|  E   |  R   |  T   |                                     |      |  7    |  8    |  9   |     |    |
			// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |      |  4    |  5    |  6   |     |    |
			// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |      |  1    |  2    |  3   |     |    |
			//                     | GUI  | DEL  | RET  |  L CTRL |   L ALT   |  |   RET   |  SPACE  |    |  0    |       |

			bindings = <
			&rgb_ug RGB_ON   &rgb_ug RGB_OFF &trans &trans &trans &trans                                          		    				&trans &kp N7  &kp N8 &kp N9   &trans    &kp DEL
			&rgb_ug RGB_TOG  &rgb_ug RGB_HUI &rgb_ug RGB_HUD &rgb_ug RGB_SAI &rgb_ug RGB_EFF &rgb_ug RGB_EFR                     		    &trans &kp N4  &kp N5 &kp N6   &trans    &trans
			&rgb_ug RGB_SAD &rgb_ug RGB_BRI  &rgb_ug RGB_BRD &rgb_ug RGB_SPI &rgb_ug RGB_SPD &kp B &kp LSHFT &kp LSHFT      &trans  &trans  &trans &kp N1  &kp N2 &kp N3   &trans    &trans
							&kp LGUI &kp DEL &kp RET &kp LCTRL &kp LALT        												&trans  &trans  &trans &kp N0  &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

/*		mod {
			// ---------------------------------------------------------------------------------------------------------------------------------
			// |    | 	 |		|  	  |  	  |  	   |                                     |      |  	    |  	    |  	  |     |    |
			// |  	  |  A  |  S  |  D   |  F   |  G   |                                          |      |  4    |  5    |  6   |     |    |
			// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |      |  1    |  2    |  3   |     |    |
			//                     | GUI  | DEL  | RET  |  L CTRL |   L ALT   |  |   RET   |  SPACE  |    |  0    |       |
			bindings = <
			&BT_CLR 	&trans 	&trans 	&trans 	&trans 	&trans 											&trans 	&kp LBKT &trans &kp SEMI &trans 	&trans 
			&trans 	&kp SQT 	&kp MINUS 	&trans 	&trans 	&trans 										&trans 	&trans 	&trans 	&trans 	&trans 	&trans 
			&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans	&trans		&trans	&trans	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 
								 	&trans 	&trans 	&trans 	&trans	&trans		&trans	&trans	&trans 	&trans 	&trans 	
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		mod {
			// ---------------------------------------------------------------------------------------------------------------------------------
			// |  ON  | OFF |BT_CLR|  E   |  R   |  T   |                                     |      |  7    |  8    |  9   |     |    |
			// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |      |  4    |  5    |  6   |     |    |
			// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |      |  1    |  2    |  3   |     |    |
			//                     | GUI  | DEL  | RET  |  L CTRL |   L ALT   |  |   RET   |  SPACE  |    |  0    |       |
			bindings = <
			&rgb_ug RGB_ON   &rgb_ug RGB_OFF &trans &trans &trans &trans                                          		    &bt BT_CLR &bt BT_NXT &bt BT_PRV &bt BT_SEL    &trans    &trans
			&rgb_ug RGB_TOG  &rgb_ug RGB_HUI &rgb_ug RGB_HUD &rgb_ug RGB_SAI &rgb_ug RGB_EFF &rgb_ug RGB_EFR                     		    &trans &kp N4  &kp N5 &kp N6   &trans    &trans
			&rgb_ug RGB_SAD &rgb_ug RGB_BRI  &rgb_ug RGB_BRD &rgb_ug RGB_SPI &rgb_ug RGB_SPD &kp B &kp LSHFT &kp LSHFT      &trans  &trans  &trans &kp N1  &kp N2 &kp N3   &trans    &trans
							&kp LGUI &kp DEL &kp RET &kp LCTRL &kp LALT        												&trans  &trans  &trans &kp N0  &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};*/
	};
};
 